<?php

namespace Tests\Unit;

use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Foundation\Testing\RefreshDatabase;

use OrgTabajara\Funcionario;
use OrgTabajara\Mensagem;
use OrgTabajara\Validator\MensagemValidator;
use OrgTabajara\Validator\ValidationException;

class MensagemTest extends TestCase
{
	/** 
	* @expectedException OrgTabajara\Validator\ValidationException 
	*/
	public function testeRemetenteIgualDestinatario() {
    	$mensagem = factory(\OrgTabajara\Mensagem::class)->make();
    	$mensagem->destinatario()->associate($mensagem->remetente);
    	var_dump($mensagem->toArray()["remetente"]);
		var_dump($mensagem->toArray()["destinatario"]);    	
    	MensagemValidator::validate($mensagem->toArray());
	}

	public function testeEnviarMensagemCaixaEntradaDestinatario() {
		$f1 = Funcionario::find(1);
		$f2 = Funcionario::find(2);
		$qtd_entrada_f2 = $f2->caixaentrada->count();

		$f1->enviarMensagemPara($f2, "titulo", "texto");

		$f2 = Funcionario::find(2);
		$qtd_entrada_f2_2 = $f2->caixaentrada->count();		

		$this->assertEquals($qtd_entrada_f2_2, $qtd_entrada_f2 + 1);
	}

		
	public function testeEnviarMensagemCaixaSaidaRemetente() {
		$f1 = Funcionario::find(1);
		$f2 = Funcionario::find(2);
		$qtd_saida_f1 = $f1->caixasaida->count();

		$f1->enviarMensagemPara($f2, "titulo", "texto");
		$f1 = Funcionario::find(1);
		$qtd_saida_f1_2 = $f1->caixasaida->count(); 
		
		$this->assertEquals($qtd_saida_f1_2, $qtd_saida_f1 + 1);
	}
		

}
